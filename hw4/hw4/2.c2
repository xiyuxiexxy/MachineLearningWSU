

H<-40
n<-0.01
EP<-70

	

train<-Data
N<-nrow(train)

random<-sample(N)
newtrain<-train
for(i in 1:N)
	newtrain[i,]=train[random[i],]

train<-newtrain

input<-train[,1:16]
x0<-rep(1,N)
input<-cbind(x0,input)	
input<-t(input)

ninput<-nrow(input)


noutput<-length(unique(train[,17]))
label<-array(dim=c(N,noutput))

for(i in 1:N)
{
	l<-train[i,17]
	label[i,]<-rep(0,noutput)
	label[i,l]=1
}


test<-read.table("hw4tsdata",sep=",")


TN<-nrow(test)		
test_input<-test[,1:16]
x0<-rep(1,TN)
test_input<-cbind(x0,test_input)	
test_input<-t(test_input)

testlabel<-array(dim=c(TN,noutput))

	


		w<-array(dim=c(H, ninput))

		for(i in 1:H)
		{
			w[i,]=runif(ninput,-0.05,0.05)
		}
		w<-t(w)

								#w[17,H]

		v<-array(dim=c(noutput, H+1))

		for(i in 1:noutput)
		{
			v[i,]=runif(H+1,-0.05,0.05)
		}

		v<-t(v)						#v[H+1,11]

	
		
		print(H)
		print(n)
		for(ep in 1:EP)
		{
			print(ep)

			for(t in 1:N)
			{
				z<-rep(0,H)
				for(h in 1:H)
				{
					z[h]=sigmoid(t(w[,h])%*%input[,t])
				}	

				z<-c(1,z)				#(a)

				O<-rep(0,noutput)
				for(i in 1:noutput)
					O[i]<-t(v[,i])%*%z


				Y<-rep(0,noutput)
				for(i in 1:noutput)
					Y[i]<-exp(O[i])/sum(exp(O))		#(b)




				deltaV<-array(dim=c(noutput,H+1))
				for(i in 1:noutput)
				{
					deltaV[i,]=n*(label[t,i]-Y[i])*z
				}
				deltaV<-t(deltaV)			#(c)


				deltaW=array(dim=c(H,ninput))


				for(h in 1:H)
				{
				
					sum=0
					for(i in 1:noutput)
						sum=sum+(label[t,i]-Y[i])*v[h+1,i]
					deltaW[h,]=n*sum*z[h+1]*(1-z[h+1])*input[,t]
	
				}	

				deltaW<-t(deltaW)

				v<-v+deltaV
				w<-w+deltaW
			}	

	}

	

			testy<-array(dim=c(TN,noutput))
			for(t in 1:TN)
			{
				z<-rep(0,H)
				for(h in 1:H)
				{
					z[h]=sigmoid(t(w[,h])%*%test_input[,t])
				}	

				z<-c(1,z)				#(a)



				O<-rep(0,noutput)
				for(i in 1:noutput)
					O[i]<-t(v[,i])%*%z


				Y<-rep(0,noutput)
				for(i in 1:noutput)
					Y[i]<-exp(O[i])/sum(exp(O))		#(b)


				testy[t,]<-Y
			}

			#print(testy)
			
			result<-c()
			for(i in 1:TN)
			{
				result<-c(result, order(testy[i,][11]))
			}	
			print(result)

